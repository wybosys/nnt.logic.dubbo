# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: test.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='test.proto',
  package='test',
  syntax='proto3',
  serialized_pb=_b('\n\ntest.proto\x12\x04test\"\t\n\x07TestReq\"\x1c\n\tTestReply\x12\x0f\n\x07message\x18\x01 \x01(\t21\n\x04Test\x12)\n\x05hello\x12\r.test.TestReq\x1a\x0f.test.TestReply\"\x00\x42\x17\n\x0c\x63om.nnt.testB\x05ProtoP\x01\x62\x06proto3')
)




_TESTREQ = _descriptor.Descriptor(
  name='TestReq',
  full_name='test.TestReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=29,
)


_TESTREPLY = _descriptor.Descriptor(
  name='TestReply',
  full_name='test.TestReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='test.TestReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=31,
  serialized_end=59,
)

DESCRIPTOR.message_types_by_name['TestReq'] = _TESTREQ
DESCRIPTOR.message_types_by_name['TestReply'] = _TESTREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TestReq = _reflection.GeneratedProtocolMessageType('TestReq', (_message.Message,), dict(
  DESCRIPTOR = _TESTREQ,
  __module__ = 'test_pb2'
  # @@protoc_insertion_point(class_scope:test.TestReq)
  ))
_sym_db.RegisterMessage(TestReq)

TestReply = _reflection.GeneratedProtocolMessageType('TestReply', (_message.Message,), dict(
  DESCRIPTOR = _TESTREPLY,
  __module__ = 'test_pb2'
  # @@protoc_insertion_point(class_scope:test.TestReply)
  ))
_sym_db.RegisterMessage(TestReply)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\014com.nnt.testB\005ProtoP\001'))

_TEST = _descriptor.ServiceDescriptor(
  name='Test',
  full_name='test.Test',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=61,
  serialized_end=110,
  methods=[
  _descriptor.MethodDescriptor(
    name='hello',
    full_name='test.Test.hello',
    index=0,
    containing_service=None,
    input_type=_TESTREQ,
    output_type=_TESTREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TEST)

DESCRIPTOR.services_by_name['Test'] = _TEST

# @@protoc_insertion_point(module_scope)
